services:
  laravel-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        - APP_ENV=production
    restart: unless-stopped
    ports:
      - "80"
      - "6001"  # WebSocket port for Reverb
    networks:
      - dokploy-network
    environment:
      # Application
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_KEY=${APP_KEY}
      - APP_URL=https://${PRODUCTION_DOMAIN}

      # Database (External MySQL)
      - DB_CONNECTION=mysql
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT:-3306}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}

      # MongoDB (External)
      - MONGODB_HOST=${MONGODB_HOST}
      - MONGODB_PORT=${MONGODB_PORT:-27017}
      - MONGODB_DATABASE=${MONGODB_DATABASE}
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}

      # Redis (Internal for this container)
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}

      # Queue and Cache
      - QUEUE_CONNECTION=redis
      - CACHE_STORE=redis
      - SESSION_DRIVER=redis

      # Broadcasting and Reverb
      - BROADCAST_CONNECTION=reverb
      - REVERB_APP_ID=${REVERB_APP_ID}
      - REVERB_APP_KEY=${REVERB_APP_KEY}
      - REVERB_APP_SECRET=${REVERB_APP_SECRET}
      - REVERB_HOST=${PRODUCTION_DOMAIN}
      - REVERB_PORT=${REVERB_PORT:-443}
      - REVERB_SCHEME=${REVERB_SCHEME:-https}
      - REVERB_SERVER_HOST=0.0.0.0
      - REVERB_SERVER_PORT=8080

      # Vite (Frontend)
      - VITE_REVERB_APP_KEY=${REVERB_APP_KEY}
      - VITE_REVERB_HOST=${PRODUCTION_DOMAIN}
      - VITE_REVERB_PORT=${REVERB_PORT:-443}
      - VITE_REVERB_SCHEME=${REVERB_SCHEME:-https}

      # Horizon
      - HORIZON_DOMAIN=${PRODUCTION_DOMAIN}
      - HORIZON_PATH=horizon

      # Mail
      - MAIL_MAILER=${MAIL_MAILER:-smtp}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT:-587}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_ENCRYPTION=${MAIL_ENCRYPTION:-tls}
      - MAIL_FROM_ADDRESS=noreply@${PRODUCTION_DOMAIN}
      - MAIL_FROM_NAME=${MAIL_FROM_NAME}

      # Logging
      - LOG_CHANNEL=stderr
      - LOG_LEVEL=${LOG_LEVEL:-error}

    volumes:
      # Persistent storage for files
      - "../files/storage:/var/www/html/storage"
      - "../files/bootstrap-cache:/var/www/html/bootstrap/cache"
      - "../files/logs:/var/log"

    depends_on:
      - redis

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/up"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.laravel-app.rule=Host(`${PRODUCTION_DOMAIN}`)"
      - "traefik.http.routers.laravel-app.entrypoints=websecure"
      - "traefik.http.routers.laravel-app.tls.certResolver=letsencrypt"
      - "traefik.http.services.laravel-app.loadbalancer.server.port=80"

      # WebSocket routing for Reverb
      - "traefik.http.routers.laravel-websocket.rule=Host(`${PRODUCTION_DOMAIN}`) && PathPrefix(`/app/`)"
      - "traefik.http.routers.laravel-websocket.entrypoints=websecure"
      - "traefik.http.routers.laravel-websocket.tls.certResolver=letsencrypt"
      - "traefik.http.services.laravel-websocket.loadbalancer.server.port=6001"

  # Redis for queues, cache, and sessions
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    networks:
      - dokploy-network
    volumes:
      - "../files/redis-data:/data"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  dokploy-network:
    external: true
