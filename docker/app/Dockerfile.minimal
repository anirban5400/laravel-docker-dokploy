# Use a pre-built image with common extensions already installed
FROM thecodingmachine/php:8.4-v4-fpm

# Install additional system packages we need
USER root
RUN apt-get update && apt-get install -y \
        netcat-openbsd \
        procps \
        && rm -rf /var/lib/apt/lists/*

# Install additional PHP extensions we need
RUN install-php-extensions mongodb redis

# Install Composer (if not already installed)
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Verify Composer installation
RUN composer --version && echo "=== Composer installed successfully ==="

WORKDIR /var/www/html

# Copy composer files first for better layer caching
COPY composer.json composer.lock* ./

# Install PHP dependencies WITHOUT running scripts (avoids the error)
RUN composer install --optimize-autoloader --no-scripts --no-interaction --no-dev \
    && echo "=== Composer dependencies installed ==="

# Copy application code
COPY . .

# Set proper permissions
RUN chown -R www-data:www-data storage bootstrap/cache \
    && chmod -R 775 storage bootstrap/cache \
    && echo "=== Permissions set ==="

# Create PHP configuration for production
RUN { \
    echo 'opcache.enable=1'; \
    echo 'opcache.memory_consumption=128'; \
    echo 'opcache.interned_strings_buffer=8'; \
    echo 'opcache.max_accelerated_files=4000'; \
    echo 'opcache.revalidate_freq=60'; \
    echo 'opcache.fast_shutdown=1'; \
    echo 'opcache.enable_cli=1'; \
    echo 'memory_limit=256M'; \
    echo 'max_execution_time=300'; \
    echo 'upload_max_filesize=100M'; \
    echo 'post_max_size=100M'; \
} > /usr/local/etc/php/conf.d/laravel.ini

# Verify all extensions are loaded
RUN php -m | grep -E "(pdo_mysql|mongodb|redis|gd|intl)" \
    && echo "=== All required extensions verified ===" \
    || (echo "=== CRITICAL: Missing extensions ===" && php -m && exit 1)

EXPOSE 9000

# Copy and set entrypoint
COPY docker/app/entrypoint.simple.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

ENTRYPOINT ["/entrypoint.sh"]
CMD ["php-fpm"]
